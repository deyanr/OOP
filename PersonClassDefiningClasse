using System;

class Person
{
    private string name;

    public string Name
    {
        get 
        {
            return this.name;
        }
        set
        {
            if (string.IsNullOrEmpty(value))
            {
                throw new NullReferenceException("Name cannot be empty");
            }
            this.name = value;
        }
    }


    private int age;

    public int Age
    { 
        get 
        {
            return this.age;
        }
        set 
        {
            if (value == null)
            {
                throw new NullReferenceException("Age cannot be empty");
            }
            if (value < 0 || value > 100 )
            {
                throw new ArgumentOutOfRangeException("Age must be in range [1..100]");
            }
            this.age = value;
        }
    }


    private string email;

    public string Email 
    {  
        get
        {
            return this.email;  
        }
        set
        {
            if((value != null) && !value.Contains("@"))            {
               throw new ArgumentException("Nonempty e-mail must contain a single @");
            }
            this.email = value;
        }
    }

    public Person(string name, int age, string email = null)
    {
        this.Name = name;
        this.Age = age;
        this.Email = email;
    }

    public override string ToString()
    {
        string result = String.Format("Name: {0}; Age: {1}; ",
            this.name, this.age);
        if (this.email != null)
        {
            result += "Email: " + this.email; 
        }
        return result;
    }
}

class PersonTest
{
    static void Main()
    {
        Person pe6o = new Person("Pe6o", 19);
        Console.WriteLine(pe6o);
        Person pesho = new Person("Pesho", 19, "peshoabv.bg");
        Console.WriteLine(pesho);
    }
}
